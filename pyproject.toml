[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-git-versioning<2"]
build-backend = "setuptools.build_meta"

[project]
name = "ragelo"
authors = [
    { name = "Zeta Alpha", email = "support@zeta-alpha.com" },
    { name = "Arthur CÃ¢mara", email = "camara@zeta-alpha.com" },
]
description = "RAGElo: A Tool for Evaluating Retrieval-Augmented Generation Models"
readme = "README.md"
requires-python = ">=3.8.1"
license = { text = "Apache-2.0" }
dynamic = ["version"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Benchmark",
]
dependencies = [
    "openai>=1.10",
    "tenacity==9.0.0",
    "typer==0.12.5",
    "numpy>=1.24",
    "pydantic>=1.9",
    "eval-type-backport>=0.2.0",
]

[project.optional-dependencies]
eval = ["ir-measures>=0.3.4"]

[dependency-groups]
dev = [
    "mypy>=1.9.0",
    "pydantic>=2.0.0",
    "pytest>=8.3.3",
    "ruff>=0.7.4",
    "types-tqdm==4.66.0",
    "pytest-asyncio==0.23.6",
    "pytest-mock==3.12.0",

]

[project.scripts]
ragelo = "ragelo.cli:app"

[project.urls]
Homepage = "https://github.com/zetaalphavector/RAGElo"
Repository = "https://github.com/zetaalphavector/RAGElo"

[tool.setuptools.packages.find]
exclude = ["data*"]


[tool.mypy]
plugins = ["pydantic.mypy"]
python_version = "3.12"
show_column_numbers = true
namespace_packages = true
follow_imports = "silent"
warn_redundant_casts = true
check_untyped_defs = true
implicit_reexport = true
ignore_missing_imports = true
exclude = ["build/", "dist/", "venv/"]


[tool.ruff]
exclude = ["docs/examples/notebooks"]
line-length = 119
fix = true

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.setuptools-git-versioning]
enabled = true

[tool.pytest.ini_options]
markers = [
    "requires_openai: marks tests as requiring a valid OpenAI api key (deselect with '-m \"not requires_openai\"')",
    "serial",
]

